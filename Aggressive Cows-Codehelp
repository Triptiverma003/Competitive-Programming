class Solution {
public:

    bool canPlace(vector<int>& stalls, int k,int minDist){
        int count = 1;
        int lastPosition = stalls[0];
        for(int i = 1; i<stalls.size(); i++){
          if(stalls[i]-lastPosition >= minDist){
            count++;
            lastPosition = stalls[i];
            if(count == k){
                return true;
            }
          }  
        }
        return false;
    }
    int aggressiveCows(vector<int>& stalls, int k) {
        // Placeholder logic for Aggressive Cows problem
        sort(stalls.begin() , stalls.end());
        int start = 1; int result = 0;
        int end = stalls.back()-stalls.front();
        while(start<=end){
            int mid = start+(end-start)/2;
            if(canPlace(stalls , k , mid)){
                result = mid;
                start = mid+1;
            }else{
                end = mid-1;
            }
        }
        return result;
    }
};
