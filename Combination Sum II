class Solution {
public:

    void solve(int start, vector<int>&candidates, vector<vector<int>>&res, int target, vector<int>&ans){
        //Base Condition 
        if(target == 0){
            res.push_back(ans);
            return;
        }

        for(int i = start; i<candidates.size(); i++){
    
        if(candidates[i] > target) break; //skip
        if(i > start && candidates[i] == candidates[i-1]) continue;

        ans.push_back(candidates[i]);
        solve(i+1, candidates, res, target-candidates[i], ans);
        ans.pop_back();

        }
    }
    vector<vector<int>> combinationSum2(vector<int>&candidates, int target) {
        vector<vector<int>>res;
        vector<int>ans;
        sort(candidates.begin(), candidates.end());
        solve(0, candidates, res, target, ans);
        return res;
    }
};
